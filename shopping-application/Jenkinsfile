pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = 'elitesolutionsit'
        DOCKER_REPO = 'react-shopping-app'
        DOCKER_TAG = 'v2'
    }

    stages {
        stage('git clone') {
            steps {
                script {
                    git branch: 'main', credentialsId: 'github-login', url: 'https://github.com/arerepadelouisbenagha/devops-automation.git'
                }
            }
        }

        stage('Copy playbook to target server') {
            steps {
                withCredentials([sshUserPrivateKey(credentialsId: 'ssh-login', keyFileVariable: 'SSH_PRIVATE_KEY', passphraseVariable: '', usernameVariable: 'ubuntu')]) {
                    script {
                        sh """
                        cd playbook/
                        sudo cp shopping-app.yml /etc/ansible
                        """
                    }
                }
            }
        }

        stage('Add to Ansible inventory') {
            steps {
                script {
                    sh '''
                    # Get the hostname and public IP address of the machine
                    HOSTNAME=webservers
                    IPADDR="<enter your remote server IPADDR."
            
                    # Check if previous inventory entry exists and remove it if necessary
                    if grep -q "[$HOSTNAME]" /etc/ansible/hosts; then
                        sudo sed -i "/[$HOSTNAME]/,/^\$/d" /etc/ansible/hosts
                    fi
            
                    # Append the machine information to the bottom of the Ansible inventory file
                    sudo sh -c "echo '\n[$HOSTNAME]\n$IPADDR' >> /etc/ansible/hosts"
                    '''
                }
            }
        }

        stage('Build Docker image') {
            steps {
                script {
                    sh """
                    cd shopping-app/
                    sudo docker build -t ${DOCKER_REGISTRY}/${DOCKER_REPO}:${DOCKER_TAG} .
                    """
                }
            }
        }

        stage('Docker Login') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'docker-login', passwordVariable: 'DOCKER_PASSWORD', usernameVariable: 'DOCKER_USERNAME')]) {
                        sh "echo '${DOCKER_PASSWORD}' | sudo docker login -u '${DOCKER_USERNAME}' --password-stdin"
                        echo 'Successfully logged into Docker Hub'
                    }
                }
            }
        }

        stage('Push Docker image') {
            steps {
                script {
                    sh """
                    sudo docker push ${DOCKER_REGISTRY}/${DOCKER_REPO}:${DOCKER_TAG}
                    """
                }
            }
        }

        stage('Deploy Docker image with Ansible') {
            steps {
                script {
                    ansiblePlaybook credentialsId: 'ssh-login', disableHostKeyChecking: true, installation: 'ansible', inventory: '/etc/ansible/hosts', playbook: '/etc/ansible/shopping-app.yml'
                }
            }
        }
    }
}
